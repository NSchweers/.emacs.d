* Tasks
** TODO Learn to use Conqueror (browser)
   [2014-07-07 Mon]
** TODO Take a closer look at mark commands and modes.  

   Items of note include
   - Visible Mark
   - AutoMark
   - MarkCommands
   [2014-07-07 Mon]
** TODO Look into smart scan, or write an alternative

   I started an alternative, but can't properly concentrate right now.  It can
   be found at misc.el (misc/next-word-at-point), but is commented out.  
   [2014-07-07 Mon]
   [[file:~/.emacs.d/code/misc.el]]
** TODO Look at emacs repeat command.

   See here: 
   http://www.masteringemacs.org/articles/2011/07/15/repeating-commands-emacs/
   [2014-07-07 Mon]
   [[file:~/.emacs.d/code/misc.el]]
** TODO Emacs recent files

   Look at modes to open recently opened files.  
   [2014-07-07 Mon]
   [[file:~/.emacs.d/code/misc.el]]
** DONE Look at ibuffer
   [2014-07-07 Mon]
   [[info:calc#Embedded%20Mode%20Overview][info:calc#Embedded Mode Overview]]
** TODO Look at eshell

   http://www.masteringemacs.org/articles/2010/12/13/complete-guide-mastering-eshell/
   [2014-07-07 Mon]
   [[info:calc#Embedded%20Mode%20Overview][info:calc#Embedded Mode Overview]]
** TODO Write an assembler and disassembler for the mb16b CPU.

   This shall be done in pure elisp. 
   [2014-07-13 Sun]
   [[file:~/.emacs.d/notes.org::*Tasks][Tasks]]
** DONE Finish dvd-rip
   [2014-07-13 Sun]
** TODO Find out how to blog with Org Mode
   [2014-07-13 Sun]
** TODO Look at project-archetypes

   This may teach me some stuff about how to properly do emacs packages, and
   how to test them (integration testing). 
   [2014-07-13 Sun]
   [[file:~/tmp/test.el::(message%20(read-string%20"")))][file:~/tmp/test.el::(message (read-string "")))]]
** DONE Look at eldoc
   [2014-07-13 Sun]
   [[file:~/.emacs.d/notes.org::*Tasks][Tasks]]
** TODO Take a closer look at elnode.

   Possibly after a node.js crashcourse.  
   [2014-07-13 Sun]
   [[file:~/.emacs.d/notes.org::*Tasks][Tasks]]
** DONE Look at Yasnippet

   I believe it is already installed, yet it is unused.  Which is a shame, as
   it seems to be /really/ awesome.  
   [2014-07-15 Tue]
** TODO Read up on the π-calculus. 
   [2014-11-23 Sun]
   [[file:~/code/his-project/model.py]]
** Sophia MC server

   url: http://hill_of_tara.aternos.me
   username: Hill_of_Tara
   pw: Hi13J25Ra02
   [2014-12-14 Sun]
   [[file:~/code/src/guile/module/system/base/compile.scm]]
** DONE Take a look at browse-kill-ring.  

   It may seem weird and clunky in the beginning, but it should be worth some
   effort.  
   [2015-01-08 Thu]
** TODO Take a look at this video (it’s on lisp)

   http://www.youtube.com/watch?v=2Op3QLzMgSY
   [2015-01-10 Sat]
** TODO Look at this article on finite state machines for parsing protocols

   http://www.cs.dartmouth.edu/~pete/pubs/LangSec-2014-fsm-parsers.pdf
   [2015-01-10 Sat]
   [[file:~/code/NetworkSecurityMeasuresAndMetrics/doc/report_template.tex::Lorem%20ipsum%20dolor%20sit%20amet,%20consetetur%20sadipscing%20elitr,%20sed%20diam%20nonumy%20eirmod%20tempor%20invidunt%20ut%20labore%20et%20dolore%20magna%20aliquyam%20erat,%20sed%20diam%20voluptua.%20At%20vero%20eos%20et%20accusam%20et%20justo%20duo%20dolores%20et%20ea%20rebum.%20Stet%20clita%20kasd%20gubergren,%20no%20sea%20takimata%20sanctus%20est%20Lorem%20ipsum%20dolor%20sit%20amet.%20Lorem%20ipsum%20dolor%20sit%20amet,%20consetetur%20sadipscing%20elitr,%20sed%20diam%20nonumy%20eirmod%20tempor%20invidunt%20ut%20labore%20et%20dolore%20magna%20aliquyam%20erat,%20sed%20diam%20voluptua.%20At%20vero%20eos%20et%20accusam%20et%20justo%20duo%20dolores%20et%20ea%20rebum.%20Stet%20clita%20kasd%20gubergren,%20no%20sea%20takimata%20sanctus%20est%20Lorem%20ipsum%20dolor%20sit%20amet.][file:~/code/NetworkSecurityMeasuresAndMetrics/doc/report_template.tex::Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.]]
** ts passwd

   zwei4und2vierzig
   [2015-01-22 Do]
   [[file:~/.emacs.d/site-lisp/diablo/diablo.org::*Merkzettel][Merkzettel]]
** TODO projectile

   Look into Projectile
   [2015-01-31 Sa]
** DONE ibuffer

   Look into ibuffer. 
   [2015-01-31 Sa]
** TODO flycheck

   Look into flycheck. 
   [2015-01-31 Sa]
** DONE Mail

   Finally get some sort of mail setup running, with IMAP please.  
   [2015-01-31 Sa]
** TODO Take a look at speed-of-thought-lisp

   http://endlessparentheses.com/new-on-elpa-speed-of-thought-lisp.html?source=rss
   [2015-02-10 Tue]
   [[file:/mnt/data/video/serien/spartacus/vengance/Spartacus.S02E03.720p.HDTV.x264-IMMERSE.mkv]]
** TODO Look at LaTeX paper helpers
   
   - writing smell detector
   - chrisper
   - academic-writing-check

   
   [2015-02-06 Fri]
** TODO Add a hook to `TeX-LaTeX-sentinel'.

   Maybe one can add advice first to `TeX-LaTeX-sentinel', which adds advice to
   `message', in order to check for success.  If the compilation was successful,
   we should run a hook.

   A function can be put into a hook which reloads the corresponding (maybe even
   all?) docview-mode buffers. 
   [2015-02-06 Fri]
   [[file:~/code/emacs.d/elpa/auctex-11.88.2/tex-buf.el::(message%20"%25s"%20(concat%20name%20":%20successfully%20formatted%20"][file:~/code/emacs.d/elpa/auctex-11.88.2/tex-buf.el::(message "%s" (concat name ": successfully formatted "]]
** DONE Krankenhaus Höchst Anrufen, für Termin

   069 3106 2002  09:00 - 16:00
   [2015-04-02 Thu]
** TODO Look at redshank

   Seems to be even cooler than paredit (runs in parallel, not a replacement)
   [2015-04-15 Wed]
** TODO Look at elint

   `elint-current-buffer'
   [2015-04-15 Wed]
** DONE Look at helm!!!
   [2015-04-15 Wed]
** DONE Mail link to Truly ergonomic to Vanessa
   [2015-02-24 Di]
   [[file:~/.emacs.d/code/setup-slime.el::(require%20'ac-slime)][file:~/.emacs.d/code/setup-slime.el::(require 'ac-slime)]]
** TODO Threema backup

   Y5NN-OY7Y-AB5Q-F4PH-57IQ-6SRW-UARN-ZD7Y-J62G-2NI7-6HUU-CFV2-RE3M-SCRC-
   YDWI-V2SO-VBKL-EEXM-FRNG-JTZH
   [[file:~/.emacs.d/notes.org::*Threema%20backup][Threema backup]]

   [2015-03-27 Fr]
   [[file:~/.emacs.d/code/setup-slime.el::(cond%20((eq%20system-type%20'windows-nt)][file:~/.emacs.d/code/setup-slime.el::(cond ((eq system-type 'windows-nt)]]
** TODO Bind custom keys in a minor mode?

   Seen this in a comment on http://masteringemacs.org:

   A great trick I recently learned (maybe from this blog; if so, sorry for the
   repetition!) is to define your custom bindings in your own minor mode, so
   that way you dont have to play whackamole with other modes that want the same
   binding.
   [2015-05-30 Sat]
** TODO Complete the function `schweers/ask-to-commit-on-exit
   
   <2015-05-31 Sun>
   [[file:~/.emacs.d/code/misc.el::%3B%3B%3B%20Don%E2%80%99t%20use%20this%20yet,%20it%E2%80%99s%20not%20working%20yet!][file:~/.emacs.d/code/misc.el::;;; Don’t use this yet, it’s not working yet!]]
** TODO Monitor SMART logs.

   Do this by using existing software, or by writing a program to monitor
   systemd (journalctl) logs.  These can be exported via json.  See also
   cl-json. 
   
   <2015-10-06 Tue>
** TODO Create a nice UI including customizable variables for a tea timer.
   
   <2015-10-27 Tue>
   [[file:~/.emacs.d/code/misc.el::(defcustom%20)][file:~/.emacs.d/code/misc.el::(defcustom )]]
* Notes
** Vice City hidden packages
   Collected 100 - 81 (incl.) from
   http://www.gtaplanet.de/gtavc/100_paeckchen.html?cat=5 
   [2015-05-27 Wed]
** cl-filter git

   [2015-05-27 Wed]
   [[file:~/.emacs.d/init.el]]
** Forth resources
   - http://www.forth.org/tutorials.html
   - http://www.softsynth.com/pforth/pf_tut.php
   - [[file:~/Documents/eBooks/SP_ProgrammingForth.pdf][Programming Forth]]
   - [[file:~/Documents/eBooks/Forth - CM_ProgrammingAProblemOrientedLanguages.pdf][ProgrammingAProblemOrientedLanguages]]

   <2015-09-23 Wed>
** Bone Rekord
   | WPM           |     94 |
   | Keystrokes    |    468 |
   | Correct Words |     86 |
   | Wrong Words   |      0 |
   | Better than   | 93.21% |
** Simply Password
   o1FaTwJXgr
** Lisp for the Web (ebook, no payment required

https://leanpub.com/lispweb
   
   <2016-04-01 Fri>
** GNU mailutils with TLS:

add WITH_GNUTLS=yes as environment variable to ./configure, together with
MU_DEFAULT_SCHEME=mh. 
   
   <2016-04-25 Mon>
   [[file:~/code/src/mailutils-2.2/configure::#%20Check%20whether%20--with-gnutls%20was%20given.][file:~/code/src/mailutils-2.2/configure::# Check whether --with-gnutls was given.]]
** Features the next LISP needs

   - Delimited and composable continuations (as in racket?)
   - Conditions and Restarts
   - CLOS + MOP
   - Dynamic/Special variables
   - Packages/Namespaces/whatever
   - Arbitrary objects as functions (maps should be functions of their keys)
     - This may necessitate the language to be a LISP-1
   - Both pattern and procedural macros
   - Pattern Matching (or at least destructuring) at all levels
   - Lexical closures (like, duh!)
   - Multiple values
   - short names!
   - Read macros
   - syntax for at least the following:
     - lists
     - symbols
     - numbers
     - hashtables
     - strings
   - bignums (including auto conversion and cond. raising)
   - fractions
   - algebraic data types
   - functional types (hashes etc)
   - Erlang style Actors?
   - parens, bracket, etc should not be equivalent
   - Good FFI
   - Save and load state to persistent storage?
   
   <2016-06-15 Wed>
   [[file:~/.emacs.d/notes.org::*GNU%20mailutils%20with%20TLS:][GNU mailutils with TLS:]]
